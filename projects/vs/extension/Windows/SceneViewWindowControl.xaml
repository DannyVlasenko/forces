<reactiveUi:ReactiveUserControl 
	x:TypeArguments="sceneView:SceneViewModel" 
	x:Class="Forces.Windows.SceneViewWindowControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:vsShell="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:sceneView="clr-namespace:Forces.ViewModels.SceneView"
    Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
    Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
    mc:Ignorable="d" d:DesignWidth="300" d:DesignHeight="50">
	<UserControl.Resources>
		<Style TargetType="Label">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static vsShell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
		</Style>
		<Style TargetType="TreeView">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static vsShell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
			<Setter Property="Background" Value="{DynamicResource {x:Static vsShell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
		</Style>
		<Style TargetType="TextBox">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static vsShell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
			<Setter Property="Background" Value="{DynamicResource {x:Static vsShell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
		</Style>
		<Style TargetType="ContextMenu">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static vsShell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
			<Setter Property="Background" Value="{DynamicResource {x:Static vsShell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
		</Style>
		<Style TargetType="Menu">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static vsShell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
			<Setter Property="Background" Value="{DynamicResource {x:Static vsShell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
		</Style>
		<Style TargetType="MenuItem">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static vsShell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
			<Setter Property="Background" Value="{DynamicResource {x:Static vsShell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
		</Style>
	</UserControl.Resources>
	<Grid>
		<TextBox 
			Name="SceneNameTextBox"
			Height="20" 
			Margin="0,0,0,0"
			VerticalAlignment="Top"/>
		<TreeView 
			Name="SceneTreeView"
			Margin="0,20,0,0" 
			BorderThickness="0">
			<TreeView.Resources>
				
			</TreeView.Resources>
			<TreeView.ItemContainerStyle>
				<Style TargetType="{x:Type TreeViewItem}">
					<Setter Property="Background" Value="Transparent"/>
					<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
					<Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
				</Style>
			</TreeView.ItemContainerStyle>
			<TreeView.ItemTemplate>
				<HierarchicalDataTemplate DataType="{x:Type sceneView:SceneViewNodeViewModel}" ItemsSource="{Binding Children}">
					<Label Content="{Binding Name}">
						<Label.ContextMenu>
							<ContextMenu ItemsSource="{Binding Actions}">
								<ContextMenu.ItemTemplate>
									<DataTemplate>
										<MenuItem IsCheckable="False"   Header="{Binding ActionName}" Command="{Binding ActionCommand}"/>
									</DataTemplate>
								</ContextMenu.ItemTemplate>
							</ContextMenu>
						</Label.ContextMenu>
					</Label>
				</HierarchicalDataTemplate>
			</TreeView.ItemTemplate>
		</TreeView>
	</Grid>
</reactiveUi:ReactiveUserControl>
